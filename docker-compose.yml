version: "3.3"
services:
  backend:
    image: node:16-alpine
    working_dir: /usr/src/app
    command: sh -c "npm install && npm run start:dev"
    volumes:
      - ./backend:/usr/src/app
    expose:
      - 3000
    depends_on:
      - postgres
    environment:
      JWT_SECRET: ${JWT_SECRET}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_DB: ${DATABASE_DB}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
      GITHUB_CLIENT_REDIRECT_URI: ${GITHUB_CLIENT_REDIRECT_URI}
      STRIPE_CLIENT_ID: ${STRIPE_CLIENT_ID}
      STRIPE_CLIENT_SECRET: ${STRIPE_CLIENT_ID}

  frontend:
    image: node:16-alpine
    working_dir: /usr/src/app
    command: sh -c "npm install && npm run serve"
    volumes:
      - ./frontend:/usr/src/app
    expose:
      - 8080

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: kanban
      POSTGRES_PASSWORD: password
      POSTGRES_DB: kanban
    # command: postgres -c max_locks_per_transaction=1000
    ports:
      - 5432:5432
    expose:
      - 5432
    volumes:
      - ./docker/postgres:/docker-entrypoint-initdb.d

  nginx:
    volumes:
      - ./docker/nginx/dev.conf:/etc/nginx/conf.d/app.conf
    image: nginx
    ports:
      - 80:80
    depends_on:
      - frontend
      - backend
